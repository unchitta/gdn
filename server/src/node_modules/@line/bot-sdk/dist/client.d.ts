/// <reference types="node" />
export default class Client {
    config: Line.ClientConfig;
    constructor(config: Line.Config & Line.ClientConfig);
    pushMessage(to: string, messages: Line.Message | Line.Message[]): Promise<any>;
    replyMessage(replyToken: string, messages: Line.Message | Line.Message[]): Promise<any>;
    multicast(to: string[], messages: Line.Message | Line.Message[]): Promise<any>;
    getProfile(userId: string): Promise<Line.Profile>;
    getGroupMemberProfile(groupId: string, userId: string): Promise<Line.Profile>;
    getRoomMemberProfile(roomId: string, userId: string): Promise<Line.Profile>;
    getGroupMemberIds(groupId: string): Promise<string[]>;
    getRoomMemberIds(roomId: string): Promise<string[]>;
    getMessageContent(messageId: string): Promise<NodeJS.ReadableStream>;
    leaveGroup(groupId: string): Promise<any>;
    leaveRoom(roomId: string): Promise<any>;
    private authHeader();
    private get(url);
    private post(url, body?);
    private stream(url);
}
